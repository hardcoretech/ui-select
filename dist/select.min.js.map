{"version":3,"sources":["select.js","select_without_templates.js","templates.js"],"names":["KEY","TAB","ENTER","ESC","SPACE","LEFT","UP","RIGHT","DOWN","SHIFT","CTRL","ALT","PAGE_UP","PAGE_DOWN","HOME","END","BACKSPACE","DELETE","COMMAND","MAP","91","8","9","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","43","44","45","46","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","144","145","186","187","188","189","190","191","192","219","220","221","222","isControl","e","k","which","metaKey","ctrlKey","altKey","isFunctionKey","isVerticalMovement","indexOf","isHorizontalMovement","toSeparator","sep","undefined","angular","element","prototype","querySelectorAll","selector","this","closest","elem","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","bind","parentElement","latestId","uis","module","constant","theme","searchEnabled","sortable","placeholder","refreshDelay","closeOnSelect","skipFocusser","dropdownPosition","removeSelected","resetSearchInput","generateId","appendToBody","spinnerEnabled","spinnerClass","service","minErr","$$minErr","error","apply","arguments","message","replace","RegExp","Error","directive","link","scope","attrs","ctrl","transclude","clone","append","filter","escapeRegexp","queryToEscape","matchItem","query","factory","$document","$window","boundingClientRect","getBoundingClientRect","width","prop","height","top","pageYOffset","documentElement","scrollTop","left","pageXOffset","scrollLeft","uiSelectConfig","RepeatParser","uiSelectMinErr","$compile","restrict","require","templateUrl","tElement","addClass","parent","attr","compile","tAttrs","repeat","groupByExp","groupBy","groupFilterExp","groupFilter","groups","length","getGroupNgRepeatExpression","parserResult","parse","choices","repeatExpression","rowsInner","clickTarget","document","addEventListener","itemName","$select","parseRepeatAttr","disableChoiceExpression","uiDisableChoice","onHighlightCallback","onHighlight","position","toLowerCase","loadMoreAttr","loadMore","hasMoreAttr","hasMore","appScope","$eval","appScopeProvider","footerTemplateUrl","$on","remove","$watch","newValue","open","multiple","activate","activeIndex","tagging","isActivated","minimumInputLength","search","refresh","items","$observe","removeAttr","controller","$scope","$element","$timeout","$filter","$$uisDebounce","$parse","$injector","_findIndex","collection","predicate","thisArg","findIndex","value","list","Object","i","call","_resetSearchInput","EMPTY_SEARCH","selected","item","equals","_groupsFilter","groupNames","j","result","name","push","_updateItemDisabled","isDisabled","disabledItemIndex","disabledItems","splice","_isItemDisabled","_initaliseLockedChoices","doInitalise","_updateItemLocked","isLocked","lockedItemIndex","lockedItems","_isItemlocked","itemScope","itemIndex","lockChoiceExpression","_handleDropDownSelection","key","processed","hasMoreResults","loadMoreResults","select","close","_ensureHighlightVisible","container","highlighted","posY","offsetTop","clientHeight","offsetHeight","isGrouped","onResizeEnd","sizeSearchInput","paste","refreshing","focus","disabled","focusser","fct","taggingTokens","tokens","functionalButtonGroup","clickTriggeredSelect","rTimeoutId","rDelta","$animate","get","err","searchInput","isEmpty","isUndefined","avoidReset","$broadcast","taggingLabel","dropdown","on","enabled","focusSearchInputIfDropdownVisible","$","css","off","focusSearchInput","initSearchValue","val","findGroupByName","group","repeatAttr","updateGroups","groupFn","forEach","groupName","isFunction","groupFilterFn","isArray","concat","setPlainItems","setItemsFn","itemProperty","originalSource","source","createArrayFromObject","origSrc","$uisSource","keys","map","v","keyName","filters","newVal","oldVal","refreshItems","data","selectedItems","filteredItems","every","selectedItem","calculateDropdownPos","$watchCollection","isDefined","ngModel","$modelValue","_refreshDelayPromise","refreshAttr","cancel","refreshPromise","then","isActive","_isItemSelected","selection","isTag","$event","type","trim","locals","onSelectCallback","$item","$model","modelMapper","$setTouched","setFocus","focusInput","clear","stopPropagation","openMatchLink","window","matchLink","toggle","preventDefault","sizeWatch","updaterScheduled","input","calculateContainerWidth","clientWidth","offsetParent","updateIfVisible","containerWidth","inputWidth","offsetLeft","setTimeout","$$postDigest","noop","$apply","tagged","keyCode","triggerHandler","newItem","clipboardData","getData","originalEvent","separator","split","oldsearch","resize","rTime","Date","clearTimeout","find","generatedId","uisOffset","controllerAs","match","exec","ngClass","combined","inputId","id","ctrls","transcludeFn","onDocumentClick","contains","jQuery","target","focusableControls","targetController","isTargetNgSelect","classList","tagName","$digest","positionDropdown","offset","style","after","originalWidth","resetDropdown","replaceWith","baseTitle","title","focusserTitle","focusserId","onSelect","onRemoveCallback","onRemove","choiceGrouped","tabindex","limit","parseInt","taggingEval","JSON","o","onClick","onClickExpression","autofocus","focusOn","transcluded","transcludedMatch","transcludedChoices","transcludedNoChoice","isOpen","directionUpClassName","searchInputKeydownHelpers","escKeyCloseDropdown","tabKeyIgnoreDefault","setDropdownPosUp","offsetDropdown","setDropdownPosDown","removeClass","setDropdownPosLeft","droppdownPosLeft","calculateDropdownPosAfterAnimation","body","documentWidth","opacity","opened","needsCalculated","phase","getAttribute","attribute","hasAttribute","multi","setAllowClear","allow","allowClear","setMatchLink","uiLockChoice","$evalAsync","activeMatchIndex","updateModel","$setViewValue","now","refreshComponent","removeChoice","index","removedChoice","getPlaceholder","_getCaretPosition","el","isNumber","selectionStart","_handleMatchSelection","getNewActiveMatchIndex","$selectMultiple","prev","last","curr","next","caretPosition","first","newIndex","Math","min","max","_findCaseInsensitiveDupe","arr","hasDupe","origItem","toUpperCase","_findApproxDupe","haystack","needle","dupeIndex","tempArr","copy","mockObj","isObject","$isEmpty","$parsers","unshift","resultMultiple","$formatters","inputValue","checkFnMultiple","p","trackByExp","propsItemNameMatches","oldValue","$render","$viewValue","event","tagItems","tagItem","stashArr","hasTag","slice","some","itemsWithoutTag","checkFnSingle","d","uiSelectSort","$ngModel","options","extend","axis","uiSelectSortOptions","draggingClassName","droppingClassName","droppingBeforeClassName","droppingAfterClassName","dataTransfer","setData","$index","toString","dropTimeout","move","from","to","className","dragOverHandler","offsetY","layerY","offsetX","layerX","dropHandler","droppedItemIndex","_dropHandler","theList","itemToMove","hasClass","$emit","array","callback","debounceTime","timeoutPromise","self","args","Array","onOpenCloseCallback","uisOpenClose","previousState","expression","filterMatch","grouped","run","$templateCache","put"],"mappings":"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","file":"select.min.js","sourcesContent":["/*!\n * ui-select\n * http://github.com/angular-ui/ui-select\n * Version: 0.19.6-hc.6 - 2020-06-19T07:56:11.727Z\n * License: MIT\n */\n\n\n(function () { \n\"use strict\";\nvar KEY = {\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    HOME: 36,\n    END: 35,\n    BACKSPACE: 8,\n    DELETE: 46,\n    COMMAND: 91,\n\n    MAP: { 91 : \"COMMAND\", 8 : \"BACKSPACE\" , 9 : \"TAB\" , 13 : \"ENTER\" , 16 : \"SHIFT\" , 17 : \"CTRL\" , 18 : \"ALT\" , 19 : \"PAUSEBREAK\" , 20 : \"CAPSLOCK\" , 27 : \"ESC\" , 32 : \"SPACE\" , 33 : \"PAGE_UP\", 34 : \"PAGE_DOWN\" , 35 : \"END\" , 36 : \"HOME\" , 37 : \"LEFT\" , 38 : \"UP\" , 39 : \"RIGHT\" , 40 : \"DOWN\" , 43 : \"+\" , 44 : \"PRINTSCREEN\" , 45 : \"INSERT\" , 46 : \"DELETE\", 48 : \"0\" , 49 : \"1\" , 50 : \"2\" , 51 : \"3\" , 52 : \"4\" , 53 : \"5\" , 54 : \"6\" , 55 : \"7\" , 56 : \"8\" , 57 : \"9\" , 59 : \";\", 61 : \"=\" , 65 : \"A\" , 66 : \"B\" , 67 : \"C\" , 68 : \"D\" , 69 : \"E\" , 70 : \"F\" , 71 : \"G\" , 72 : \"H\" , 73 : \"I\" , 74 : \"J\" , 75 : \"K\" , 76 : \"L\", 77 : \"M\" , 78 : \"N\" , 79 : \"O\" , 80 : \"P\" , 81 : \"Q\" , 82 : \"R\" , 83 : \"S\" , 84 : \"T\" , 85 : \"U\" , 86 : \"V\" , 87 : \"W\" , 88 : \"X\" , 89 : \"Y\" , 90 : \"Z\", 96 : \"0\" , 97 : \"1\" , 98 : \"2\" , 99 : \"3\" , 100 : \"4\" , 101 : \"5\" , 102 : \"6\" , 103 : \"7\" , 104 : \"8\" , 105 : \"9\", 106 : \"*\" , 107 : \"+\" , 109 : \"-\" , 110 : \".\" , 111 : \"/\", 112 : \"F1\" , 113 : \"F2\" , 114 : \"F3\" , 115 : \"F4\" , 116 : \"F5\" , 117 : \"F6\" , 118 : \"F7\" , 119 : \"F8\" , 120 : \"F9\" , 121 : \"F10\" , 122 : \"F11\" , 123 : \"F12\", 144 : \"NUMLOCK\" , 145 : \"SCROLLLOCK\" , 186 : \";\" , 187 : \"=\" , 188 : \",\" , 189 : \"-\" , 190 : \".\" , 191 : \"/\" , 192 : \"`\" , 219 : \"[\" , 220 : \"\\\\\" , 221 : \"]\" , 222 : \"'\"\n    },\n\n    isControl: function (e) {\n        var k = e.which;\n        switch (k) {\n        case KEY.COMMAND:\n        case KEY.SHIFT:\n        case KEY.CTRL:\n        case KEY.ALT:\n            return true;\n        }\n\n        if (e.metaKey || e.ctrlKey || e.altKey) return true;\n\n        return false;\n    },\n    isFunctionKey: function (k) {\n        k = k.which ? k.which : k;\n        return k >= 112 && k <= 123;\n    },\n    isVerticalMovement: function (k){\n      return ~[KEY.UP, KEY.DOWN].indexOf(k);\n    },\n    isHorizontalMovement: function (k){\n      return ~[KEY.LEFT,KEY.RIGHT,KEY.BACKSPACE,KEY.DELETE].indexOf(k);\n    },\n    toSeparator: function (k) {\n      var sep = {ENTER:\"\\n\",TAB:\"\\t\",SPACE:\" \"}[k];\n      if (sep) return sep;\n      // return undefined for special keys other than enter, tab or space.\n      // no way to use them to cut strings.\n      return KEY[k] ? undefined : k;\n    }\n  };\n\n/**\n * Add querySelectorAll() to jqLite.\n *\n * jqLite find() is limited to lookups by tag name.\n * TODO This will change with future versions of AngularJS, to be removed when this happens\n *\n * See jqLite.find - why not use querySelectorAll? https://github.com/angular/angular.js/issues/3586\n * See feat(jqLite): use querySelectorAll instead of getElementsByTagName in jqLite.find https://github.com/angular/angular.js/pull/3598\n */\nif (angular.element.prototype.querySelectorAll === undefined) {\n  angular.element.prototype.querySelectorAll = function(selector) {\n    return angular.element(this[0].querySelectorAll(selector));\n  };\n}\n\n/**\n * Add closest() to jqLite.\n */\nif (angular.element.prototype.closest === undefined) {\n  angular.element.prototype.closest = function( selector) {\n    var elem = this[0];\n    var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\n\n    while (elem) {\n      if (matchesSelector.bind(elem)(selector)) {\n        return elem;\n      } else {\n        elem = elem.parentElement;\n      }\n    }\n    return false;\n  };\n}\n\nvar latestId = 0;\n\nvar uis = angular.module('ui.select', [])\n\n.constant('uiSelectConfig', {\n  theme: 'bootstrap',\n  searchEnabled: true,\n  sortable: false,\n  placeholder: '', // Empty by default, like HTML tag <select>\n  refreshDelay: 1000, // In milliseconds\n  closeOnSelect: true,\n  skipFocusser: false,\n  dropdownPosition: 'auto',\n  removeSelected: true,\n  resetSearchInput: true,\n  generateId: function() {\n    return latestId++;\n  },\n  appendToBody: false,\n  spinnerEnabled: false,\n  spinnerClass: 'glyphicon-refresh ui-select-spin',\n})\n\n// See Rename minErr and make it accessible from outside https://github.com/angular/angular.js/issues/6913\n.service('uiSelectMinErr', function() {\n  var minErr = angular.$$minErr('ui.select');\n  return function() {\n    var error = minErr.apply(this, arguments);\n    var message = error.message.replace(new RegExp('\\nhttp://errors.angularjs.org/.*'), '');\n    return new Error(message);\n  };\n})\n\n// Recreates old behavior of ng-transclude. Used internally.\n.directive('uisTranscludeAppend', function () {\n  return {\n    link: function (scope, element, attrs, ctrl, transclude) {\n        transclude(scope, function (clone) {\n          element.append(clone);\n        });\n      }\n    };\n})\n\n/**\n * Highlights text that matches $select.search.\n *\n * Taken from AngularUI Bootstrap Typeahead\n * See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L340\n */\n.filter('highlight', function() {\n  function escapeRegexp(queryToEscape) {\n    return ('' + queryToEscape).replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  return function(matchItem, query) {\n    return query && matchItem ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<span class=\"ui-select-highlight\">$&</span>') : matchItem;\n  };\n})\n\n/**\n * A read-only equivalent of jQuery's offset function: http://api.jquery.com/offset/\n *\n * Taken from AngularUI Bootstrap Position:\n * See https://github.com/angular-ui/bootstrap/blob/master/src/position/position.js#L70\n */\n.factory('uisOffset',\n  ['$document', '$window',\n  function ($document, $window) {\n\n  return function(element) {\n    var boundingClientRect = element[0].getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || element.prop('offsetWidth'),\n      height: boundingClientRect.height || element.prop('offsetHeight'),\n      top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n      left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n    };\n  };\n}]);\n\nuis.directive('uiSelectChoices',\n  ['uiSelectConfig', 'uisRepeatParser', 'uiSelectMinErr', '$compile', '$window',\n  function(uiSelectConfig, RepeatParser, uiSelectMinErr, $compile, $window) {\n\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-choices');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/choices.tpl.html';\n    },\n\n    compile: function(tElement, tAttrs) {\n\n      if (!tAttrs.repeat) throw uiSelectMinErr('repeat', \"Expected 'repeat' expression.\");\n\n      // var repeat = RepeatParser.parse(attrs.repeat);\n      var groupByExp = tAttrs.groupBy;\n      var groupFilterExp = tAttrs.groupFilter;\n\n      if (groupByExp) {\n        var groups = tElement.querySelectorAll('.ui-select-choices-group');\n        if (groups.length !== 1) throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-group but got '{0}'.\", groups.length);\n        groups.attr('ng-repeat', RepeatParser.getGroupNgRepeatExpression());\n      }\n\n      var parserResult = RepeatParser.parse(tAttrs.repeat);\n\n      var choices = tElement.querySelectorAll('.ui-select-choices-row');\n      if (choices.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row but got '{0}'.\", choices.length);\n      }\n\n      choices.attr('ng-repeat', parserResult.repeatExpression(groupByExp))\n             .attr('ng-if', '$select.open'); //Prevent unnecessary watches when dropdown is closed\n    \n\n      var rowsInner = tElement.querySelectorAll('.ui-select-choices-row-inner');\n      if (rowsInner.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row-inner but got '{0}'.\", rowsInner.length);\n      }\n      rowsInner.attr('uis-transclude-append', ''); //Adding uisTranscludeAppend directive to row element after choices element has ngRepeat\n\n      // If IE8 then need to target rowsInner to apply the ng-click attr as choices will not capture the event. \n      var clickTarget = $window.document.addEventListener ? choices : rowsInner;\n      clickTarget.attr('ng-click', '$select.select(' + parserResult.itemName + ',$select.skipFocusser,$event)');\n      \n      return function link(scope, element, attrs, $select) {\n\n       \n        $select.parseRepeatAttr(attrs.repeat, groupByExp, groupFilterExp); //Result ready at $select.parserResult\n        $select.disableChoiceExpression = attrs.uiDisableChoice;\n        $select.onHighlightCallback = attrs.onHighlight;\n        $select.dropdownPosition = attrs.position ? attrs.position.toLowerCase() : uiSelectConfig.dropdownPosition;        \n        $select.loadMoreAttr = attrs.loadMore;\n        $select.hasMoreAttr = attrs.hasMore;\n\n        $select.appScope = scope.$eval(attrs.appScopeProvider);\n        $select.footerTemplateUrl = scope.$eval(attrs.footerTemplateUrl);\n\n        scope.$on('$destroy', function() {\n          choices.remove();\n        });\n\n        scope.$watch('$select.search', function(newValue) {\n          if(newValue && !$select.open && $select.multiple) $select.activate(false, true);\n          $select.activeIndex = $select.tagging.isActivated ? -1 : 0;\n          if (!attrs.minimumInputLength || $select.search.length >= attrs.minimumInputLength) {\n            if ($select.open) {\n\t\t\t  $select.refresh(attrs.refresh);\n\t\t\t}\n          } else {\n            $select.items = [];\n          }\n        });\n\n        attrs.$observe('refreshDelay', function() {\n          // $eval() is needed otherwise we get a string instead of a number\n          var refreshDelay = scope.$eval(attrs.refreshDelay);\n          $select.refreshDelay = refreshDelay !== undefined ? refreshDelay : uiSelectConfig.refreshDelay;\n        });\n\n        scope.$watch('$select.open', function(open) {\n          if (open) {\n            tElement.attr('role', 'listbox');\n\t\t\t$select.refresh(attrs.refresh);\n          } else {\n            tElement.removeAttr('role');\n          }\n        });\n      };\n    }\n  };\n}]);\n\n/**\n * Contains ui-select \"intelligence\".\n *\n * The goal is to limit dependency on the DOM whenever possible and\n * put as much logic in the controller (instead of the link functions) as possible so it can be easily tested.\n */\nuis.controller('uiSelectCtrl',\n  ['$scope', '$element', '$timeout', '$filter', '$$uisDebounce', 'uisRepeatParser', 'uiSelectMinErr', 'uiSelectConfig', '$parse', '$injector', '$window',\n  function($scope, $element, $timeout, $filter, $$uisDebounce, RepeatParser, uiSelectMinErr, uiSelectConfig, $parse, $injector, $window) {\n\n  var ctrl = this;\n\n  var EMPTY_SEARCH = '';\n\n  ctrl.placeholder = uiSelectConfig.placeholder;\n  ctrl.searchEnabled = uiSelectConfig.searchEnabled;\n  ctrl.sortable = uiSelectConfig.sortable;\n  ctrl.refreshDelay = uiSelectConfig.refreshDelay;\n  ctrl.paste = uiSelectConfig.paste;\n  ctrl.resetSearchInput = uiSelectConfig.resetSearchInput;\n  ctrl.refreshing = false;\n  ctrl.spinnerEnabled = uiSelectConfig.spinnerEnabled;\n  ctrl.spinnerClass = uiSelectConfig.spinnerClass;\n\n  ctrl.removeSelected = uiSelectConfig.removeSelected; //If selected item(s) should be removed from dropdown list\n  ctrl.closeOnSelect = true; //Initialized inside uiSelect directive link function\n  ctrl.skipFocusser = false; //Set to true to avoid returning focus to ctrl when item is selected\n  ctrl.search = EMPTY_SEARCH;\n\n  ctrl.activeIndex = 0; //Dropdown of choices\n  ctrl.items = []; //All available choices\n\n  ctrl.open = false;\n  ctrl.focus = false;\n  ctrl.disabled = false;\n  ctrl.selected = undefined;\n\n  ctrl.dropdownPosition = 'auto';\n\n  ctrl.focusser = undefined; //Reference to input element used to handle focus events\n  ctrl.multiple = undefined; // Initialized inside uiSelect directive link function\n  ctrl.disableChoiceExpression = undefined; // Initialized inside uiSelectChoices directive link function\n  ctrl.tagging = {isActivated: false, fct: undefined};\n  ctrl.taggingTokens = {isActivated: false, tokens: undefined};\n  ctrl.lockChoiceExpression = undefined; // Initialized inside uiSelectMatch directive link function\n  ctrl.functionalButtonGroup = undefined;\n  ctrl.clickTriggeredSelect = false;\n  ctrl.$filter = $filter;\n  ctrl.$element = $element;\n\n  ctrl.rTimeoutId = undefined;\n  ctrl.rDelta = 50;\n\n  // Use $injector to check for $animate and store a reference to it\n  ctrl.$animate = (function () {\n    try {\n      return $injector.get('$animate');\n    } catch (err) {\n      // $animate does not exist\n      return null;\n    }\n  })();\n\n  ctrl.searchInput = $element.querySelectorAll('input.ui-select-search');\n  if (ctrl.searchInput.length !== 1) {\n    throw uiSelectMinErr('searchInput', \"Expected 1 input.ui-select-search but got '{0}'.\", ctrl.searchInput.length);\n  }\n\n  ctrl.isEmpty = function() {\n    return angular.isUndefined(ctrl.selected) || ctrl.selected === null || ctrl.selected === '' || (ctrl.multiple && ctrl.selected.length === 0);\n  };\n\n  function _findIndex(collection, predicate, thisArg){\n    if (collection.findIndex){\n      return collection.findIndex(predicate, thisArg);\n    } else {\n      var list = Object(collection);\n      var length = list.length >>> 0;\n      var value;\n\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }\n\n  // Most of the time the user does not want to empty the search input when in typeahead mode\n  function _resetSearchInput() {\n    if (ctrl.resetSearchInput) {\n      ctrl.search = EMPTY_SEARCH;\n      //reset activeIndex\n      if (ctrl.selected && ctrl.items.length && !ctrl.multiple) {\n        ctrl.activeIndex = _findIndex(ctrl.items, function(item){\n          return angular.equals(this, item);\n        }, ctrl.selected);\n      }\n    }\n  }\n\n    function _groupsFilter(groups, groupNames) {\n      var i, j, result = [];\n      for(i = 0; i < groupNames.length ;i++){\n        for(j = 0; j < groups.length ;j++){\n          if(groups[j].name == [groupNames[i]]){\n            result.push(groups[j]);\n          }\n        }\n      }\n      return result;\n    }\n\n  // When the user clicks on ui-select, displays the dropdown list\n  ctrl.activate = function(focusser, avoidReset) {\n    if (!ctrl.disabled  && !ctrl.open) {\n      if(!avoidReset) _resetSearchInput();\n\n      $scope.$broadcast('uis:activate');\n      ctrl.open = true;\n      ctrl.activeIndex = ctrl.activeIndex >= ctrl.items.length ? 0 : ctrl.activeIndex;\n      // ensure that the index is set to zero for tagging variants\n      // that where first option is auto-selected\n      if ( ctrl.activeIndex === -1 && ctrl.taggingLabel !== false ) {\n        ctrl.activeIndex = 0;\n      }\n\n      var dropdown = $element.querySelectorAll('.ui-select-dropdown');\n      if (ctrl.$animate && ctrl.$animate.on && ctrl.$animate.enabled(dropdown[0])) {\n        var focusSearchInputIfDropdownVisible = function () {\n          if ($(dropdown[0]).css('display') === 'none') { // skip if dropdown not display\n            return;\n          }\n\n          ctrl.$animate.off('removeClass', dropdown[0], focusSearchInputIfDropdownVisible);\n          $timeout(function () {\n            ctrl.focusSearchInput(focusser);\n          });\n        };\n\n        // removeClass will be triggered by ngClass on ui-select-dropdown\n        // Note: original version of ui-select will waiting for refreshing animation on ui-select-search\n        //       But, we don't have that kind of animations, thus removed.\n        ctrl.$animate.on('removeClass', dropdown[0], focusSearchInputIfDropdownVisible);\n      } else {\n        $timeout(function () {\n          ctrl.focusSearchInput(focusser);\n          if(!ctrl.tagging.isActivated && ctrl.items.length > 1) {\n            _ensureHighlightVisible();\n          }\n        });\n      }\n    }\n    else if (ctrl.open && !ctrl.searchEnabled) {\n      // Close the selection if we don't have search enabled, and we click on the select again\n      ctrl.close();\n    }\n  };\n\n  ctrl.focusSearchInput = function (focusser) {\n    var initSearchValue = focusser ? focusser.val() : focusser;\n    ctrl.search = initSearchValue || ctrl.search;\n    ctrl.searchInput[0].focus();\n\n    if (focusser) {\n      focusser.val('');\n    }\n  };\n\n  ctrl.findGroupByName = function(name) {\n    return ctrl.groups && ctrl.groups.filter(function(group) {\n      return group.name === name;\n    })[0];\n  };\n\n  ctrl.parseRepeatAttr = function(repeatAttr, groupByExp, groupFilterExp) {\n    function updateGroups(items) {\n      var groupFn = $scope.$eval(groupByExp);\n      ctrl.groups = [];\n      angular.forEach(items, function(item) {\n        var groupName = angular.isFunction(groupFn) ? groupFn(item) : item[groupFn];\n        var group = ctrl.findGroupByName(groupName);\n        if(group) {\n          group.items.push(item);\n        }\n        else {\n          ctrl.groups.push({name: groupName, items: [item]});\n        }\n      });\n      if(groupFilterExp){\n        var groupFilterFn = $scope.$eval(groupFilterExp);\n        if( angular.isFunction(groupFilterFn)){\n          ctrl.groups = groupFilterFn(ctrl.groups);\n        } else if(angular.isArray(groupFilterFn)){\n          ctrl.groups = _groupsFilter(ctrl.groups, groupFilterFn);\n        }\n      }\n      ctrl.items = [];\n      ctrl.groups.forEach(function(group) {\n        ctrl.items = ctrl.items.concat(group.items);\n      });\n    }\n\n    function setPlainItems(items) {\n      ctrl.items = items;\n    }\n\n    ctrl.setItemsFn = groupByExp ? updateGroups : setPlainItems;\n\n    ctrl.parserResult = RepeatParser.parse(repeatAttr);\n\n    ctrl.isGrouped = !!groupByExp;\n    ctrl.itemProperty = ctrl.parserResult.itemName;\n\n    //If collection is an Object, convert it to Array\n\n    var originalSource = ctrl.parserResult.source;\n\n    //When an object is used as source, we better create an array and use it as 'source'\n    var createArrayFromObject = function(){\n      var origSrc = originalSource($scope);\n      $scope.$uisSource = Object.keys(origSrc).map(function(v){\n        var result = {};\n        result[ctrl.parserResult.keyName] = v;\n        result.value = origSrc[v];\n        return result;\n      });\n    };\n\n    if (ctrl.parserResult.keyName){ // Check for (key,value) syntax\n      createArrayFromObject();\n      ctrl.parserResult.source = $parse('$uisSource' + ctrl.parserResult.filters);\n      $scope.$watch(originalSource, function(newVal, oldVal){\n        if (newVal !== oldVal) createArrayFromObject();\n      }, true);\n    }\n\n    ctrl.refreshItems = function (data){\n      data = data || ctrl.parserResult.source($scope);\n      var selectedItems = ctrl.selected;\n      //TODO should implement for single mode removeSelected\n      if (ctrl.isEmpty() || (angular.isArray(selectedItems) && !selectedItems.length) || !ctrl.multiple || !ctrl.removeSelected) {\n        ctrl.setItemsFn(data);\n      }else{\n        if ( data !== undefined && data !== null ) {\n          var filteredItems = data.filter(function(i) {\n            return angular.isArray(selectedItems) ? selectedItems.every(function(selectedItem) {\n              return !angular.equals(i, selectedItem);\n            }) : !angular.equals(i, selectedItems);\n          });\n          ctrl.setItemsFn(filteredItems);\n        }\n      }\n      if (ctrl.dropdownPosition === 'auto' || ctrl.dropdownPosition === 'up'){\n        $scope.calculateDropdownPos();\n      }\n      $scope.$broadcast('uis:refresh');\n    };\n\n    // See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L259\n    $scope.$watchCollection(ctrl.parserResult.source, function(items) {\n      if (items === undefined || items === null) {\n        // If the user specifies undefined or null => reset the collection\n        // Special case: items can be undefined if the user did not initialized the collection on the scope\n        // i.e $scope.addresses = [] is missing\n        ctrl.items = [];\n      } else {\n        if (!angular.isArray(items)) {\n          throw uiSelectMinErr('items', \"Expected an array but got '{0}'.\", items);\n        } else {\n          //Remove already selected items (ex: while searching)\n          //TODO Should add a test\n          ctrl.refreshItems(items);\n\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ctrl.ngModel.$modelValue)) {\n            ctrl.ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n        }\n      }\n    });\n\n  };\n\n  var _refreshDelayPromise;\n\n  /**\n   * Typeahead mode: lets the user refresh the collection using his own function.\n   *\n   * See Expose $select.search for external / remote filtering https://github.com/angular-ui/ui-select/pull/31\n   */\n  ctrl.refresh = function(refreshAttr) {\n    if (refreshAttr !== undefined) {\n      // Debounce\n      // See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L155\n      // FYI AngularStrap typeahead does not have debouncing: https://github.com/mgcrea/angular-strap/blob/v2.0.0-rc.4/src/typeahead/typeahead.js#L177\n      if (_refreshDelayPromise) {\n        $timeout.cancel(_refreshDelayPromise);\n      }\n      _refreshDelayPromise = $timeout(function() {\n        var refreshPromise =  $scope.$eval(refreshAttr);\n        if (refreshPromise && angular.isFunction(refreshPromise.then) && !ctrl.refreshing) {\n          ctrl.refreshing = true;\n          refreshPromise.then(function() {\n            ctrl.refreshing = false;\n          });\n      }}, ctrl.refreshDelay);\n    }\n  };\n\n  ctrl.loadMoreResults = function () {\n    if (!ctrl.loadMoreAttr) {\n      return;\n    }\n    $scope.$eval(ctrl.loadMoreAttr);\n  };\n\n  ctrl.hasMoreResults = function () {\n    if (!ctrl.loadMoreAttr || !ctrl.hasMoreAttr) {\n      return false;\n    }\n    return $scope.$eval(ctrl.hasMoreAttr);\n  };\n\n  ctrl.isActive = function(itemScope) {\n    if ( !ctrl.open ) {\n      return false;\n    }\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isActive =  itemIndex == ctrl.activeIndex;\n\n    if ( !isActive || itemIndex < 0 ) {\n      return false;\n    }\n\n    if (isActive && !angular.isUndefined(ctrl.onHighlightCallback)) {\n      itemScope.$eval(ctrl.onHighlightCallback);\n    }\n\n    return isActive;\n  };\n\n  var _isItemSelected = function (item) {\n    return (ctrl.selected && angular.isArray(ctrl.selected) &&\n        ctrl.selected.filter(function (selection) { return angular.equals(selection, item); }).length > 0);\n  };\n\n  var disabledItems = [];\n\n  function _updateItemDisabled(item, isDisabled) {\n    var disabledItemIndex = disabledItems.indexOf(item);\n    if (isDisabled && disabledItemIndex === -1) {\n      disabledItems.push(item);\n    }\n\n    if (!isDisabled && disabledItemIndex > -1) {\n      disabledItems.splice(disabledItemIndex, 1);\n    }\n  }\n\n  function _isItemDisabled(item) {\n    return disabledItems.indexOf(item) > -1;\n  }\n\n  ctrl.isDisabled = function(itemScope) {\n\n    if (!ctrl.open) return;\n\n    var item = itemScope[ctrl.itemProperty];\n    var itemIndex = ctrl.items.indexOf(item);\n    var isDisabled = false;\n\n    if (itemIndex >= 0 && (angular.isDefined(ctrl.disableChoiceExpression) || ctrl.multiple)) {\n\n      if (item.isTag) return false;\n\n      if (ctrl.multiple) {\n        isDisabled = _isItemSelected(item);\n      }\n\n      if (!isDisabled && angular.isDefined(ctrl.disableChoiceExpression)) {\n        isDisabled = !!(itemScope.$eval(ctrl.disableChoiceExpression));\n      }\n\n      _updateItemDisabled(item, isDisabled);\n    }\n\n    return isDisabled;\n  };\n\n\n  // When the user selects an item with ENTER or clicks the dropdown\n  ctrl.select = function(item, skipFocusser, $event) {\n    if (item === undefined || item === null || !_isItemDisabled(item)) {\n\n      if ( ! ctrl.items && ! ctrl.search && ! ctrl.tagging.isActivated) return;\n\n      if (!item || !_isItemDisabled(item)) {\n        // if click is made on existing item, prevent from tagging, ctrl.search does not matter\n        ctrl.clickTriggeredSelect = false;\n        if($event && ($event.type === 'click' || $event.type === 'touchend') && item)\n          ctrl.clickTriggeredSelect = true;\n\n        if(ctrl.tagging.isActivated && ctrl.clickTriggeredSelect === false) {\n          // if taggingLabel is disabled and item is undefined we pull from ctrl.search\n          if ( ctrl.taggingLabel === false ) {\n            if ( ctrl.activeIndex < 0 ) {\n              if (item === undefined || item === null) {\n                item = ctrl.tagging.fct !== undefined ? ctrl.tagging.fct(ctrl.search) : ctrl.search;\n              }\n              if (!item || angular.equals( ctrl.items[0], item ) ) {\n                return;\n              }\n            } else {\n              // keyboard nav happened first, user selected from dropdown\n              item = ctrl.items[ctrl.activeIndex];\n            }\n          } else {\n            // tagging always operates at index zero, taggingLabel === false pushes\n            // the ctrl.search value without having it injected\n            if ( ctrl.activeIndex === 0 ) {\n              // ctrl.tagging pushes items to ctrl.items, so we only have empty val\n              // for `item` if it is a detected duplicate\n              if ( item === undefined || item === null) return;\n\n              // create new item on the fly if we don't already have one;\n              // use tagging function if we have one\n              if ( ctrl.tagging.fct !== undefined && typeof item === 'string' ) {\n                item = ctrl.tagging.fct(item);\n                if (!item) return;\n              // if item type is 'string', apply the tagging label\n              } else if ( typeof item === 'string' ) {\n                // trim the trailing space\n                item = item.replace(ctrl.taggingLabel,'').trim();\n              }\n            }\n          }\n          // search ctrl.selected for dupes potentially caused by tagging and return early if found\n          if (_isItemSelected(item)) {\n            ctrl.close(skipFocusser);\n            return;\n          }\n        }\n        _resetSearchInput();\n        $scope.$broadcast('uis:select', item);\n\n        var locals = {};\n        locals[ctrl.parserResult.itemName] = item;\n\n        $timeout(function(){\n          ctrl.onSelectCallback($scope, {\n            $item: item,\n            $model: ctrl.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        if (ctrl.closeOnSelect) {\n          ctrl.close(skipFocusser);\n        }\n      }\n    }\n  };\n\n  // Closes the dropdown\n  ctrl.close = function(skipFocusser) {\n    if (!ctrl.open) return;\n    if (ctrl.ngModel && ctrl.ngModel.$setTouched) ctrl.ngModel.$setTouched();\n    ctrl.open = false;\n    _resetSearchInput();\n    $scope.$broadcast('uis:close', skipFocusser);\n\n  };\n\n  ctrl.setFocus = function(){\n    if (!ctrl.focus) ctrl.focusInput[0].focus();\n  };\n\n  ctrl.clear = function($event) {\n    ctrl.select(null);\n    $event.stopPropagation();\n    $timeout(function() {\n      ctrl.focusser[0].focus();\n    }, 0, false);\n  };\n\n  ctrl.openMatchLink = function($event) {\n    window.open(ctrl.matchLink, '_blank');\n    $event.stopPropagation();\n  };\n\n  // Toggle dropdown\n  ctrl.toggle = function(e) {\n    if (ctrl.open) {\n      ctrl.close();\n      e.preventDefault();\n      e.stopPropagation();\n    } else {\n      ctrl.activate();\n    }\n  };\n\n  // Set default function for locked choices - avoids unnecessary\n  // logic if functionality is not being used\n  ctrl.isLocked = function () {\n    return false;\n  };\n\n  $scope.$watch(function () {\n    return angular.isDefined(ctrl.lockChoiceExpression) && ctrl.lockChoiceExpression !== \"\";\n  }, _initaliseLockedChoices);\n\n  function _initaliseLockedChoices(doInitalise) {\n    if(!doInitalise) return;\n\n    var lockedItems = [];\n\n    function _updateItemLocked(item, isLocked) {\n      var lockedItemIndex = lockedItems.indexOf(item);\n      if (isLocked && lockedItemIndex === -1) {\n        lockedItems.push(item);\n        }\n\n      if (!isLocked && lockedItemIndex > -1) {\n        lockedItems.splice(lockedItemIndex, 0);\n      }\n    }\n\n    function _isItemlocked(item) {\n      return lockedItems.indexOf(item) > -1;\n    }\n\n    ctrl.isLocked = function (itemScope, itemIndex) {\n      var isLocked = false,\n          item = ctrl.selected[itemIndex];\n\n      if(item) {\n        if (itemScope) {\n          isLocked = !!(itemScope.$eval(ctrl.lockChoiceExpression));\n          _updateItemLocked(item, isLocked);\n        } else {\n          isLocked = _isItemlocked(item);\n        }\n      }\n\n      return isLocked;\n    };\n  }\n\n\n  var sizeWatch = null;\n  var updaterScheduled = false;\n  ctrl.sizeSearchInput = function() {\n\n    var input = ctrl.searchInput[0],\n        container = ctrl.searchInput.parent().parent()[0],\n        calculateContainerWidth = function() {\n          // Return the container width only if the search input is visible\n          return container.clientWidth * !!input.offsetParent;\n        },\n        updateIfVisible = function(containerWidth) {\n          if (containerWidth === 0) {\n            return false;\n          }\n          var inputWidth = containerWidth - input.offsetLeft - 10;\n          if (inputWidth < 50) inputWidth = containerWidth;\n          ctrl.searchInput.css('width', inputWidth+'px');\n          return true;\n        };\n\n    ctrl.searchInput.css('width', '10px');\n    setTimeout(function() { //Give tags time to render correctly\n      if (sizeWatch === null && !updateIfVisible(calculateContainerWidth())) {\n        sizeWatch = $scope.$watch(function() {\n          if (!updaterScheduled) {\n            updaterScheduled = true;\n            $scope.$$postDigest(function() {\n              updaterScheduled = false;\n              if (updateIfVisible(calculateContainerWidth())) {\n                sizeWatch();\n                sizeWatch = null;\n              }\n            });\n          }\n        }, angular.noop);\n      }\n    });\n  };\n\n  function _handleDropDownSelection(key) {\n    var processed = true;\n    switch (key) {\n      case KEY.DOWN:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex < ctrl.items.length - 1) { ctrl.activeIndex++; }\n        else if ((ctrl.activeIndex === ctrl.items.length - 1) && ctrl.hasMoreResults()) { ctrl.loadMoreResults(); }\n        break;\n      case KEY.UP:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex > 0 || (ctrl.search.length === 0 && ctrl.tagging.isActivated && ctrl.activeIndex > -1)) { ctrl.activeIndex--; }\n        break;\n      case KEY.TAB:\n        if (!ctrl.multiple || ctrl.open) ctrl.select(ctrl.items[ctrl.activeIndex], true);\n        break;\n      case KEY.ENTER:\n        if(ctrl.open && (ctrl.tagging.isActivated || ctrl.activeIndex >= 0)){\n          ctrl.select(ctrl.items[ctrl.activeIndex], ctrl.skipFocusser); // Make sure at least one dropdown item is highlighted before adding if not in tagging mode\n        } else {\n          ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        }\n        break;\n      case KEY.ESC:\n        ctrl.close();\n        break;\n      default:\n        processed = false;\n    }\n    return processed;\n  }\n\n  // Bind to keyboard shortcuts\n  ctrl.searchInput.on('keydown', function(e) {\n\n    var key = e.which;\n\n    if (~[KEY.ENTER,KEY.ESC].indexOf(key)){\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    $scope.$apply(function() {\n\n      var tagged = false;\n\n      if (ctrl.items.length > 0 || ctrl.tagging.isActivated) {\n        if(!_handleDropDownSelection(key) && !ctrl.searchEnabled) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n        if ( ctrl.taggingTokens.isActivated ) {\n          for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {\n            if ( ctrl.taggingTokens.tokens[i] === KEY.MAP[e.keyCode] ) {\n              // make sure there is a new value to push via tagging\n              if ( ctrl.search.length > 0 ) {\n                tagged = true;\n              }\n            }\n          }\n          if ( tagged ) {\n            $timeout(function() {\n              ctrl.searchInput.triggerHandler('tagged');\n              var newItem = ctrl.search.replace(KEY.MAP[e.keyCode],'').trim();\n              if ( ctrl.tagging.fct ) {\n                newItem = ctrl.tagging.fct( newItem );\n              }\n              if (newItem) ctrl.select(newItem, true);\n            });\n          }\n        }\n      }\n\n    });\n\n    if(KEY.isVerticalMovement(key) && ctrl.items.length > 0){\n      _ensureHighlightVisible();\n    }\n\n    if (key === KEY.ENTER || key === KEY.ESC) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n  });\n\n  ctrl.searchInput.on('paste', function (e) {\n    var data;\n\n    if (window.clipboardData && window.clipboardData.getData) { // IE\n      data = window.clipboardData.getData('Text');\n    } else {\n      data = (e.originalEvent || e).clipboardData.getData('text/plain');\n    }\n\n    // Prepend the current input field text to the paste buffer.\n    data = ctrl.search + data;\n\n    if (data && data.length > 0) {\n      // If tagging try to split by tokens and add items\n      if (ctrl.taggingTokens.isActivated) {\n        var items = [];\n        for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {  // split by first token that is contained in data\n          var separator = KEY.toSeparator(ctrl.taggingTokens.tokens[i]) || ctrl.taggingTokens.tokens[i];\n          if (data.indexOf(separator) > -1) {\n            items = data.split(separator);\n            break;  // only split by one token\n          }\n        }\n        if (items.length === 0) {\n          items = [data];\n        }\n        var oldsearch = ctrl.search;\n        angular.forEach(items, function (item) {\n          var newItem = ctrl.tagging.fct ? ctrl.tagging.fct(item) : item;\n          if (newItem) {\n            ctrl.select(newItem, true);\n          }\n        });\n        ctrl.search = oldsearch || EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      } else if (ctrl.paste) {\n        ctrl.paste(data);\n        ctrl.search = EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  });\n\n  ctrl.searchInput.on('tagged', function() {\n    $timeout(function() {\n      _resetSearchInput();\n    });\n  });\n\n  // See https://github.com/ivaynberg/select2/blob/3.4.6/select2.js#L1431\n  function _ensureHighlightVisible() {\n    var container = $element.querySelectorAll('.ui-select-choices-content');\n    var choices = container.querySelectorAll('.ui-select-choices-row');\n    if (choices.length < 1) {\n      throw uiSelectMinErr('choices', \"Expected multiple .ui-select-choices-row but got '{0}'.\", choices.length);\n    }\n\n    if (ctrl.activeIndex < 0) {\n      return;\n    }\n\n    var highlighted = choices[ctrl.activeIndex];\n    var posY = highlighted.offsetTop + highlighted.clientHeight - container[0].scrollTop;\n    var height = container[0].offsetHeight;\n\n    if (posY > height) {\n      container[0].scrollTop += posY - height;\n    } else if (posY < highlighted.clientHeight) {\n      if (ctrl.isGrouped && ctrl.activeIndex === 0)\n        container[0].scrollTop = 0; //To make group header visible when going all the way up\n      else\n        container[0].scrollTop -= highlighted.clientHeight - posY;\n    }\n  }\n\n  // KK: Not using uisDebounce for sizing SearchInput because $digest cycles will be triggered by $timeout\n  //     during Angular's change detection (which is also triggered on every async event) phase. Either use setTimeout or\n  //     putting the code into $evalAsync to make it run after the DOM has been manipulated by Angular, but before the\n  //     browser renders it. see https://indepth.dev/angulars-digest-is-reborn-in-the-newer-version-of-angular/,\n  //     https://stackoverflow.com/questions/17301572/whats-the-difference-between-evalasync-and-timeout-in-angularjs\n  function onResizeEnd() {\n    ctrl.sizeSearchInput();\n  }\n\n  $(window).resize(function() {\n    ctrl.rTime = new Date();\n    if (ctrl.rTimeoutId !== undefined) {\n      clearTimeout(ctrl.rTimeoutId);\n    }\n    ctrl.rTimeoutId = setTimeout(onResizeEnd, ctrl.rDelta);\n  });\n\n  $scope.$on('$destroy', function() {\n    ctrl.searchInput.off('keyup keydown tagged blur paste');\n  });\n\n  $scope.$watch('$select.activeIndex', function(activeIndex) {\n    if (activeIndex)\n      $element.find('input').attr(\n        'aria-activedescendant',\n        'ui-select-choices-row-' + ctrl.generatedId + '-' + activeIndex);\n  });\n\n  $scope.$watch('$select.open', function(open) {\n    if (!open)\n      $element.find('input').removeAttr('aria-activedescendant');\n  });\n}]);\n\nuis.directive('uiSelect',\n  ['$document', 'uiSelectConfig', 'uiSelectMinErr', 'uisOffset', '$compile', '$parse', '$timeout',\n  function($document, uiSelectConfig, uiSelectMinErr, uisOffset, $compile, $parse, $timeout) {\n\n  return {\n    restrict: 'EA',\n    templateUrl: function(tElement, tAttrs) {\n      var theme = tAttrs.theme || uiSelectConfig.theme;\n      return theme + (angular.isDefined(tAttrs.multiple) ? '/select-multiple.tpl.html' : '/select.tpl.html');\n    },\n    replace: true,\n    transclude: true,\n    require: ['uiSelect', '^ngModel'],\n    scope: true,\n\n    controller: 'uiSelectCtrl',\n    controllerAs: '$select',\n    compile: function(tElement, tAttrs) {\n\n      // Allow setting ngClass on uiSelect\n      var match = /{(.*)}\\s*{(.*)}/.exec(tAttrs.ngClass);\n      if(match) {\n        var combined = '{'+ match[1] +', '+ match[2] +'}';\n        tAttrs.ngClass = combined;\n        tElement.attr('ng-class', combined);\n      }\n\n      //Multiple or Single depending if multiple attribute presence\n      if (angular.isDefined(tAttrs.multiple))\n        tElement.append('<ui-select-multiple/>').removeAttr('multiple');\n      else\n        tElement.append('<ui-select-single/>');\n\n      if (tAttrs.inputId)\n        tElement.querySelectorAll('input.ui-select-search')[0].id = tAttrs.inputId;\n\n      return function(scope, element, attrs, ctrls, transcludeFn) {\n\n        var $select = ctrls[0];\n        var ngModel = ctrls[1];\n\n        $select.generatedId = uiSelectConfig.generateId();\n        $select.baseTitle = attrs.title || 'Select box';\n        $select.focusserTitle = $select.baseTitle + ' focus';\n        $select.focusserId = 'focusser-' + $select.generatedId;\n\n        $select.closeOnSelect = function() {\n          if (angular.isDefined(attrs.closeOnSelect)) {\n            return $parse(attrs.closeOnSelect)();\n          } else {\n            return uiSelectConfig.closeOnSelect;\n          }\n        }();\n\n        scope.$watch('skipFocusser', function() {\n            var skipFocusser = scope.$eval(attrs.skipFocusser);\n            $select.skipFocusser = skipFocusser !== undefined ? skipFocusser : uiSelectConfig.skipFocusser;\n        });\n\n        $select.onSelectCallback = $parse(attrs.onSelect);\n        $select.onRemoveCallback = $parse(attrs.onRemove);\n\n        //Set reference to ngModel from uiSelectCtrl\n        $select.ngModel = ngModel;\n\n        $select.choiceGrouped = function(group){\n          return $select.isGrouped && group && group.name;\n        };\n\n        if(attrs.tabindex){\n          attrs.$observe('tabindex', function(value) {\n            $select.focusInput.attr('tabindex', value);\n            element.removeAttr('tabindex');\n          });\n        }\n\n        scope.$watch(function () { return scope.$eval(attrs.searchEnabled); }, function(newVal) {\n          $select.searchEnabled = newVal !== undefined ? newVal : uiSelectConfig.searchEnabled;\n        });\n\n        scope.$watch('sortable', function() {\n            var sortable = scope.$eval(attrs.sortable);\n            $select.sortable = sortable !== undefined ? sortable : uiSelectConfig.sortable;\n        });\n\n        attrs.$observe('limit', function() {\n          //Limit the number of selections allowed\n          $select.limit = (angular.isDefined(attrs.limit)) ? parseInt(attrs.limit, 10) : undefined;\n        });\n\n        scope.$watch('removeSelected', function() {\n            var removeSelected = scope.$eval(attrs.removeSelected);\n            $select.removeSelected = removeSelected !== undefined ? removeSelected : uiSelectConfig.removeSelected;\n        });\n\n        attrs.$observe('disabled', function() {\n          // No need to use $eval() (thanks to ng-disabled) since we already get a boolean instead of a string\n          $select.disabled = attrs.disabled !== undefined ? attrs.disabled : false;\n        });\n\n        attrs.$observe('resetSearchInput', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var resetSearchInput = scope.$eval(attrs.resetSearchInput);\n          $select.resetSearchInput = resetSearchInput !== undefined ? resetSearchInput : true;\n        });\n\n        attrs.$observe('paste', function() {\n          $select.paste = scope.$eval(attrs.paste);\n        });\n\n        attrs.$observe('tagging', function() {\n          if(attrs.tagging !== undefined)\n          {\n            // $eval() is needed otherwise we get a string instead of a boolean\n            var taggingEval = scope.$eval(attrs.tagging);\n            $select.tagging = {isActivated: true, fct: taggingEval !== true ? taggingEval : undefined};\n          }\n          else\n          {\n            $select.tagging = {isActivated: false, fct: undefined};\n          }\n        });\n\n        attrs.$observe('taggingLabel', function() {\n          if(attrs.tagging !== undefined )\n          {\n            // check eval for FALSE, in this case, we disable the labels\n            // associated with tagging\n            if ( attrs.taggingLabel === 'false' ) {\n              $select.taggingLabel = false;\n            }\n            else\n            {\n              $select.taggingLabel = attrs.taggingLabel !== undefined ? attrs.taggingLabel : '(new)';\n            }\n          }\n        });\n\n        attrs.$observe('taggingTokens', function() {\n          if (attrs.tagging !== undefined) {\n            var tokens = attrs.taggingTokens !== undefined ? attrs.taggingTokens.split('|') : [',','ENTER'];\n            $select.taggingTokens = {isActivated: true, tokens: tokens };\n          }\n        });\n\n        attrs.$observe('spinnerEnabled', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var spinnerEnabled = scope.$eval(attrs.spinnerEnabled);\n          $select.spinnerEnabled = spinnerEnabled !== undefined ? spinnerEnabled : uiSelectConfig.spinnerEnabled;\n        });\n\n        attrs.$observe('spinnerClass', function() {\n          var spinnerClass = attrs.spinnerClass;\n          $select.spinnerClass = spinnerClass !== undefined ? attrs.spinnerClass : uiSelectConfig.spinnerClass;\n        });\n\n        attrs.$observe('functionalButtonGroup', function() {\n          if (!attrs.functionalButtonGroup) {\n            return;\n          }\n          var functionalButtonGroup = JSON.parse(attrs.functionalButtonGroup);\n          functionalButtonGroup.map(function(o) {\n            o.onClick = function() { scope.$eval(o.onClickExpression); };\n            return o;\n          });\n          $select.functionalButtonGroup = functionalButtonGroup;\n        });\n\n        //Automatically gets focus when loaded\n        if (angular.isDefined(attrs.autofocus)){\n          var autofocus = scope.$eval(attrs.autofocus);\n          if (autofocus) {\n            $timeout(function(){\n              $select.setFocus();\n            }, 100);\n          }\n        }\n\n        //Gets focus based on scope event name (e.g. focus-on='SomeEventName')\n        if (angular.isDefined(attrs.focusOn)){\n          scope.$on(attrs.focusOn, function() {\n              $timeout(function(){\n                $select.setFocus();\n              });\n          });\n        }\n\n        function onDocumentClick(e) {\n          if (!$select.open) return; //Skip it if dropdown is close\n\n          var contains = false;\n\n          if (window.jQuery) {\n            // Firefox 3.6 does not support element.contains()\n            // See Node.contains https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\n            contains = window.jQuery.contains(element[0], e.target);\n          } else {\n            contains = element[0].contains(e.target);\n          }\n\n          if (!contains && !$select.clickTriggeredSelect) {\n            var skipFocusser;\n            if (!$select.skipFocusser) {\n              //Will lose focus only with certain targets\n              var focusableControls = ['input','button','textarea','select'];\n              var targetController = angular.element(e.target).controller('uiSelect'); //To check if target is other ui-select\n              var isTargetNgSelect = e.target.classList.contains('ng-input'); //To check if target is ng-select\n              skipFocusser = (targetController && targetController !== $select) || isTargetNgSelect; //To check if target is other ui-select or ng-select\n              if (!skipFocusser) skipFocusser =  ~focusableControls.indexOf(e.target.tagName.toLowerCase()); //Check if target is input, button or textarea\n            } else {\n              skipFocusser = true;\n            }\n            $select.close(skipFocusser);\n            scope.$digest();\n          }\n          $select.clickTriggeredSelect = false;\n        }\n\n        // See Click everywhere but here event http://stackoverflow.com/questions/12931369\n        $document.on('click', onDocumentClick);\n\n        scope.$on('$destroy', function() {\n          $document.off('click', onDocumentClick);\n        });\n\n        // Move transcluded elements to their correct position in main template\n        transcludeFn(scope, function(clone) {\n          // See Transclude in AngularJS http://blog.omkarpatil.com/2012/11/transclude-in-angularjs.html\n\n          // One day jqLite will be replaced by jQuery and we will be able to write:\n          // var transcludedElement = clone.filter('.my-class')\n          // instead of creating a hackish DOM element:\n          var transcluded = angular.element('<div>').append(clone);\n\n          var transcludedMatch = transcluded.querySelectorAll('.ui-select-match');\n          transcludedMatch.removeAttr('ui-select-match'); //To avoid loop in case directive as attr\n          transcludedMatch.removeAttr('data-ui-select-match'); // Properly handle HTML5 data-attributes\n          if (transcludedMatch.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-match but got '{0}'.\", transcludedMatch.length);\n          }\n          element.querySelectorAll('.ui-select-match').replaceWith(transcludedMatch);\n\n          var transcludedChoices = transcluded.querySelectorAll('.ui-select-choices');\n          transcludedChoices.removeAttr('ui-select-choices'); //To avoid loop in case directive as attr\n          transcludedChoices.removeAttr('data-ui-select-choices'); // Properly handle HTML5 data-attributes\n          if (transcludedChoices.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-choices but got '{0}'.\", transcludedChoices.length);\n          }\n          element.querySelectorAll('.ui-select-choices').replaceWith(transcludedChoices);\n\n          var transcludedNoChoice = transcluded.querySelectorAll('.ui-select-no-choice');\n          transcludedNoChoice.removeAttr('ui-select-no-choice'); //To avoid loop in case directive as attr\n          transcludedNoChoice.removeAttr('data-ui-select-no-choice'); // Properly handle HTML5 data-attributes\n          if (transcludedNoChoice.length == 1) {\n            element.querySelectorAll('.ui-select-no-choice').replaceWith(transcludedNoChoice);\n          }\n        });\n\n        // Support for appending the select field to the body when its open\n        var appendToBody = scope.$eval(attrs.appendToBody);\n        if (appendToBody !== undefined ? appendToBody : uiSelectConfig.appendToBody) {\n          scope.$watch('$select.open', function(isOpen) {\n            if (isOpen) {\n              positionDropdown();\n            } else {\n              resetDropdown();\n            }\n          });\n\n          // Move the dropdown back to its original location when the scope is destroyed. Otherwise\n          // it might stick around when the user routes away or the select field is otherwise removed\n          scope.$on('$destroy', function() {\n            resetDropdown();\n          });\n        }\n\n        // Hold on to a reference to the .ui-select-container element for appendToBody support\n        var placeholder = null,\n            originalWidth = '';\n\n        function positionDropdown() {\n          // Remember the absolute position of the element\n          var offset = uisOffset(element);\n\n          // Clone the element into a placeholder element to take its original place in the DOM\n          placeholder = angular.element('<div class=\"ui-select-placeholder\"></div>');\n          placeholder[0].style.width = offset.width + 'px';\n          placeholder[0].style.height = offset.height + 'px';\n          element.after(placeholder);\n\n          // Remember the original value of the element width inline style, so it can be restored\n          // when the dropdown is closed\n          originalWidth = element[0].style.width;\n\n          // Now move the actual dropdown element to the end of the body\n          $document.find('body').append(element);\n\n          element[0].style.position = 'absolute';\n          element[0].style.left = offset.left + 'px';\n          element[0].style.top = offset.top + 'px';\n          element[0].style.width = offset.width + 'px';\n        }\n\n        function resetDropdown() {\n          if (placeholder === null) {\n            // The dropdown has not actually been display yet, so there's nothing to reset\n            return;\n          }\n\n          // Move the dropdown element back to its original location in the DOM\n          placeholder.replaceWith(element);\n          placeholder = null;\n\n          element[0].style.position = '';\n          element[0].style.left = '';\n          element[0].style.top = '';\n          element[0].style.width = originalWidth;\n\n          // Set focus back on to the moved element\n          $select.setFocus();\n        }\n\n        // Hold on to a reference to the .ui-select-dropdown element for direction support.\n        var dropdown = null,\n            directionUpClassName = 'direction-up';\n\n        // Support changing the direction of the dropdown if there isn't enough space to render it.\n        scope.$watch('$select.open', function() {\n\n          if ($select.dropdownPosition === 'auto' || $select.dropdownPosition === 'up'){\n            scope.calculateDropdownPos();\n          }\n\n        });\n\n        // Patch: hide dropdown on pressing ESC while no items on search result\n        // Patch: prevent losing focus on pressing TAB while no items on search result\n        var searchInputKeydownHelpers = (function () {\n          function escKeyCloseDropdown($event) {\n            if ($event.keyCode === KEY.ESC) {\n              $timeout(function() {\n                $select.close();\n                $select.setFocus();\n              });\n            }\n          }\n\n          function tabKeyIgnoreDefault($event) {\n            if ($event.keyCode === KEY.TAB) {\n              $event.preventDefault();\n              $event.stopPropagation();\n            }\n          }\n\n          return {\n            escKeyCloseDropdown: escKeyCloseDropdown,\n            tabKeyIgnoreDefault: tabKeyIgnoreDefault,\n          };\n        })();\n\n        $select.searchInput.bind('keydown', searchInputKeydownHelpers.escKeyCloseDropdown);\n        $select.searchInput.bind('keydown', searchInputKeydownHelpers.tabKeyIgnoreDefault);\n\n        var setDropdownPosUp = function(offset, offsetDropdown){\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = 'absolute';\n          dropdown[0].style.top = (offsetDropdown.height * -1) + 'px';\n          dropdown[0].style.left = '';\n          element.addClass(directionUpClassName);\n\n        };\n\n        var setDropdownPosDown = function(offset, offsetDropdown){\n\n          element.removeClass(directionUpClassName);\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = '';\n          dropdown[0].style.top = '';\n          dropdown[0].style.left = '';\n\n        };\n\n        var setDropdownPosLeft = function(offset, offsetDropdown) {\n  \n          var droppdownPosLeft = offsetDropdown.width - offset.width;\n          dropdown[0].style.position = 'absolute';\n          dropdown[0].style.left = -droppdownPosLeft + 'px';\n\n        };\n\n        var calculateDropdownPosAfterAnimation = function() {\n          // Delay positioning the dropdown until all choices have been added so its height is correct.\n          $timeout(function() {\n            if ($select.dropdownPosition === 'up') {\n              //Go UP\n              setDropdownPosUp();\n            } else {\n              //AUTO\n              element.removeClass(directionUpClassName);\n\n              var offset = uisOffset(element);\n              var offsetDropdown = uisOffset(dropdown);\n\n              //https://code.google.com/p/chromium/issues/detail?id=342307#c4\n              var scrollTop = $document[0].documentElement.scrollTop || $document[0].body.scrollTop; //To make it cross browser (blink, webkit, IE, Firefox).\n\n              // Determine if the direction of the dropdown needs to be changed.\n              if (offset.top + offset.height + offsetDropdown.height > scrollTop + $document[0].documentElement.clientHeight) {\n                //Go UP\n                setDropdownPosUp(offset, offsetDropdown);\n              }else{\n                //Go DOWN\n                setDropdownPosDown(offset, offsetDropdown);\n              }\n              var offsetLeft = offset.left + offsetDropdown.width;\n              var documentWidth = $document[0].documentElement.clientWidth;\n              if (offsetLeft > documentWidth) {\n                setDropdownPosLeft(offset, offsetDropdown);\n              }\n            }\n\n            // Display the dropdown once it has been positioned.\n            dropdown[0].style.opacity = 1;\n          });\n        };\n\n        var opened = false;\n\n        scope.calculateDropdownPos = function() {\n          if ($select.open) {\n            dropdown = angular.element(element).querySelectorAll('.ui-select-dropdown');\n\n            if (dropdown.length === 0) {\n              return;\n            }\n\n           // Hide the dropdown so there is no flicker until $timeout is done executing.\n           if ($select.search === '' && !opened) {\n              dropdown[0].style.opacity = 0;\n              opened = true;\n           }\n\n            if (!uisOffset(dropdown).height && $select.$animate && $select.$animate.on && $select.$animate.enabled(dropdown)) {\n              var needsCalculated = true;\n\n              $select.$animate.on('enter', dropdown, function (elem, phase) {\n                if (phase === 'close' && needsCalculated) {\n                  calculateDropdownPosAfterAnimation();\n                  needsCalculated = false;\n                }\n              });\n            } else {\n              calculateDropdownPosAfterAnimation();\n            }\n          } else {\n            if (dropdown === null || dropdown.length === 0) {\n              return;\n            }\n\n            // Reset the position of the dropdown.\n            dropdown[0].style.opacity = 0;\n            dropdown[0].style.position = '';\n            dropdown[0].style.top = '';\n            element.removeClass(directionUpClassName);\n          }\n        };\n      };\n    }\n  };\n}]);\n\nuis.directive('uiSelectMatch', ['uiSelectConfig', function(uiSelectConfig) {\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-match');\n\n      var parent = tElement.parent();\n      // Gets theme attribute from parent (ui-select)\n      var theme = getAttribute(parent, 'theme') || uiSelectConfig.theme;\n      var multi = angular.isDefined(getAttribute(parent, 'multiple'));\n\n      return theme + (multi ? '/match-multiple.tpl.html' : '/match.tpl.html');      \n    },\n    link: function(scope, element, attrs, $select) {\n      $select.lockChoiceExpression = attrs.uiLockChoice;\n      attrs.$observe('placeholder', function(placeholder) {\n        $select.placeholder = placeholder !== undefined ? placeholder : uiSelectConfig.placeholder;\n      });\n\n      function setAllowClear(allow) {\n        $select.allowClear = (angular.isDefined(allow)) ? (allow === '') ? true : (allow.toLowerCase() === 'true') : false;\n      }\n\n      attrs.$observe('allowClear', setAllowClear);\n      setAllowClear(attrs.allowClear);\n\n      function setMatchLink(link) {\n        $select.matchLink = angular.isDefined(link) ? link : null;\n      }\n\n      attrs.$observe('matchLink', setMatchLink);\n      setMatchLink(attrs.matchLink);\n\n      if($select.multiple){\n        $select.sizeSearchInput();\n      }\n\n    }\n  };\n\n  function getAttribute(elem, attribute) {\n    if (elem[0].hasAttribute(attribute))\n      return elem.attr(attribute);\n\n    if (elem[0].hasAttribute('data-' + attribute))\n      return elem.attr('data-' + attribute);\n\n    if (elem[0].hasAttribute('x-' + attribute))\n      return elem.attr('x-' + attribute);\n  }\n}]);\n\nuis.directive('uiSelectMultiple', ['uiSelectMinErr','$timeout', function(uiSelectMinErr, $timeout) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n\n    controller: ['$scope','$timeout', function($scope, $timeout){\n\n      var ctrl = this,\n          $select = $scope.$select,\n          ngModel;\n\n      if (angular.isUndefined($select.selected))\n        $select.selected = [];\n\n      //Wait for link fn to inject it\n      $scope.$evalAsync(function(){ ngModel = $scope.ngModel; });\n\n      ctrl.activeMatchIndex = -1;\n\n      ctrl.updateModel = function(){\n        ngModel.$setViewValue(Date.now()); //Set timestamp as a unique string to force changes\n        ctrl.refreshComponent();\n      };\n\n      ctrl.refreshComponent = function(){\n        //Remove already selected items\n        //e.g. When user clicks on a selection, the selected array changes and\n        //the dropdown should remove that item\n        if($select.refreshItems){\n          $select.refreshItems();\n        }\n        if($select.sizeSearchInput){\n          $select.sizeSearchInput();\n        }\n      };\n\n      // Remove item from multiple select\n      ctrl.removeChoice = function(index){\n\n        // if the choice is locked, don't remove it\n        if($select.isLocked(null, index)) return false;\n\n        var removedChoice = $select.selected[index];\n\n        var locals = {};\n        locals[$select.parserResult.itemName] = removedChoice;\n\n        $select.selected.splice(index, 1);\n        ctrl.activeMatchIndex = -1;\n        $select.sizeSearchInput();\n\n        // Give some time for scope propagation.\n        $timeout(function(){\n          $select.onRemoveCallback($scope, {\n            $item: removedChoice,\n            $model: $select.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        ctrl.updateModel();\n\n        return true;\n      };\n\n      ctrl.getPlaceholder = function(){\n        //Refactor single?\n        if($select.selected && $select.selected.length) return;\n        return $select.placeholder;\n      };\n\n\n    }],\n    controllerAs: '$selectMultiple',\n\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = scope.ngModel = ctrls[1];\n      var $selectMultiple = scope.$selectMultiple;\n\n      //$select.selected = raw selected objects (ignoring any property binding)\n\n      $select.multiple = true;\n\n      //Input that will handle focus\n      $select.focusInput = $select.searchInput;\n\n      //Properly check for empty if set to multiple\n      ngModel.$isEmpty = function(value) {\n        return !value || value.length === 0;\n      };\n\n      //From view --> model\n      ngModel.$parsers.unshift(function () {\n        var locals = {},\n            result,\n            resultMultiple = [];\n        for (var j = $select.selected.length - 1; j >= 0; j--) {\n          locals = {};\n          locals[$select.parserResult.itemName] = $select.selected[j];\n          result = $select.parserResult.modelMapper(scope, locals);\n          resultMultiple.unshift(result);\n        }\n        return resultMultiple;\n      });\n\n      // From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (!data) return inputValue;\n        var resultMultiple = [];\n        var checkFnMultiple = function(list, value){\n          if (!list || !list.length) return;\n          for (var p = list.length - 1; p >= 0; p--) {\n            locals[$select.parserResult.itemName] = list[p];\n            result = $select.parserResult.modelMapper(scope, locals);\n            if($select.parserResult.trackByExp){\n                var propsItemNameMatches = /(\\w*)\\./.exec($select.parserResult.trackByExp);\n                var matches = /\\.([^\\s]+)/.exec($select.parserResult.trackByExp);\n                if(propsItemNameMatches && propsItemNameMatches.length > 0 && propsItemNameMatches[1] == $select.parserResult.itemName){\n                  if(matches && matches.length>0 && result[matches[1]] == value[matches[1]]){\n                      resultMultiple.unshift(list[p]);\n                      return true;\n                  }\n                }\n            }\n            if (angular.equals(result,value)){\n              resultMultiple.unshift(list[p]);\n              return true;\n            }\n          }\n          return false;\n        };\n        if (!inputValue) return resultMultiple; //If ngModel was undefined\n        for (var k = inputValue.length - 1; k >= 0; k--) {\n          //Check model array of currently selected items\n          if (!checkFnMultiple($select.selected, inputValue[k])){\n            //Check model array of all items available\n            if (!checkFnMultiple(data, inputValue[k])){\n              //If not found on previous lists, just add it directly to resultMultiple\n              resultMultiple.unshift(inputValue[k]);\n            }\n          }\n        }\n        return resultMultiple;\n      });\n\n      //Watch for external model changes\n      scope.$watchCollection(function(){ return ngModel.$modelValue; }, function(newValue, oldValue) {\n        if (oldValue != newValue){\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ngModel.$modelValue)) {\n            ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n          $selectMultiple.refreshComponent();\n        }\n      });\n\n      ngModel.$render = function() {\n        // Make sure that model value is array\n        if(!angular.isArray(ngModel.$viewValue)){\n          // Have tolerance for null or undefined values\n          if(angular.isUndefined(ngModel.$viewValue) || ngModel.$viewValue === null){\n            ngModel.$viewValue = [];\n          } else {\n            throw uiSelectMinErr('multiarr', \"Expected model value to be array but got '{0}'\", ngModel.$viewValue);\n          }\n        }\n        $select.selected = ngModel.$viewValue;\n        $selectMultiple.refreshComponent();\n        scope.$evalAsync(); //To force $digest\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        if($select.selected.length >= $select.limit) {\n          return;\n        }\n        $select.selected.push(item);\n        $selectMultiple.updateModel();\n      });\n\n      scope.$on('uis:activate', function () {\n        $selectMultiple.activeMatchIndex = -1;\n      });\n\n      scope.$watch('$select.disabled', function(newValue, oldValue) {\n        // As the search input field may now become visible, it may be necessary to recompute its size\n        if (oldValue && !newValue) $select.sizeSearchInput();\n      });\n\n      $select.searchInput.on('keydown', function(e) {\n        var key = e.which;\n        scope.$apply(function() {\n          var processed = false;\n          // var tagged = false; //Checkme\n          if(KEY.isHorizontalMovement(key)){\n            processed = _handleMatchSelection(key);\n          }\n          if (processed  && key != KEY.TAB) {\n            //TODO Check si el tab selecciona aun correctamente\n            //Crear test\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        });\n      });\n      function _getCaretPosition(el) {\n        if(angular.isNumber(el.selectionStart)) return el.selectionStart;\n        // selectionStart is not supported in IE8 and we don't want hacky workarounds so we compromise\n        else return el.value.length;\n      }\n      // Handles selected options in \"multiple\" mode\n      function _handleMatchSelection(key){\n        var caretPosition = _getCaretPosition($select.searchInput[0]),\n            length = $select.selected.length,\n            // none  = -1,\n            first = 0,\n            last  = length-1,\n            curr  = $selectMultiple.activeMatchIndex,\n            next  = $selectMultiple.activeMatchIndex+1,\n            prev  = $selectMultiple.activeMatchIndex-1,\n            newIndex = curr;\n\n        if(caretPosition > 0 || ($select.search.length && key == KEY.RIGHT)) return false;\n\n        $select.close();\n\n        function getNewActiveMatchIndex(){\n          switch(key){\n            case KEY.LEFT:\n              // Select previous/first item\n              if(~$selectMultiple.activeMatchIndex) return prev;\n              // Select last item\n              else return last;\n              break;\n            case KEY.RIGHT:\n              // Open drop-down\n              if(!~$selectMultiple.activeMatchIndex || curr === last){\n                $select.activate();\n                return false;\n              }\n              // Select next/last item\n              else return next;\n              break;\n            case KEY.BACKSPACE:\n              // Remove selected item and select previous/first\n              if(~$selectMultiple.activeMatchIndex){\n                if($selectMultiple.removeChoice(curr)) {\n                  return prev;\n                } else {\n                  return curr;\n                }\n                \n              } else {\n                // If nothing yet selected, select last item\n                return last;  \n              }              \n              break;\n            case KEY.DELETE:\n              // Remove selected item and select next item\n              if(~$selectMultiple.activeMatchIndex){\n                $selectMultiple.removeChoice($selectMultiple.activeMatchIndex);\n                return curr;\n              }\n              else return false;\n          }\n        }\n\n        newIndex = getNewActiveMatchIndex();\n\n        if(!$select.selected.length || newIndex === false) $selectMultiple.activeMatchIndex = -1;\n        else $selectMultiple.activeMatchIndex = Math.min(last,Math.max(first,newIndex));\n\n        return true;\n      }\n\n      $select.searchInput.on('keyup', function(e) {\n\n        if ( ! KEY.isVerticalMovement(e.which) ) {\n          scope.$evalAsync( function () {\n            $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          });\n        }\n        // Push a \"create new\" item into array if there is a search string\n        if ( $select.tagging.isActivated && $select.search.length > 0 ) {\n\n          // return early with these keys\n          if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || KEY.isVerticalMovement(e.which) ) {\n            return;\n          }\n          // always reset the activeIndex to the first item when tagging\n          $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          // taggingLabel === false bypasses all of this\n          if ($select.taggingLabel === false) return;\n\n          var items = angular.copy( $select.items );\n          var stashArr = angular.copy( $select.items );\n          var newItem;\n          var item;\n          var hasTag = false;\n          var dupeIndex = -1;\n          var tagItems;\n          var tagItem;\n\n          // case for object tagging via transform `$select.tagging.fct` function\n          if ( $select.tagging.fct !== undefined) {\n            tagItems = $select.$filter('filter')(items,{'isTag': true});\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            // remove the first element, if it has the `isTag` prop we generate a new one with each keyup, shaving the previous\n            if ( items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.tagging.fct($select.search);\n            // verify the new tag doesn't match the value of a possible selection choice or an already selected item.\n            if (\n              stashArr.some(function (origItem) {\n                 return angular.equals(origItem, newItem);\n              }) ||\n              $select.selected.some(function (origItem) {\n                return angular.equals(origItem, newItem);\n              })\n            ) {\n              scope.$evalAsync(function () {\n                $select.activeIndex = 0;\n                $select.items = items;\n              });\n              return;\n            }\n            if (newItem) newItem.isTag = true;\n          // handle newItem string and stripping dupes in tagging string context\n          } else {\n            // find any tagging items already in the $select.items array and store them\n            tagItems = $select.$filter('filter')(items,function (item) {\n              return item.match($select.taggingLabel);\n            });\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            item = items[0];\n            // remove existing tag item if found (should only ever be one tag item)\n            if ( item !== undefined && items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.search+' '+$select.taggingLabel;\n            if ( _findApproxDupe($select.selected, $select.search) > -1 ) {\n              return;\n            }\n            // verify the the tag doesn't match the value of an existing item from\n            // the searched data set or the items already selected\n            if ( _findCaseInsensitiveDupe(stashArr.concat($select.selected)) ) {\n              // if there is a tag from prev iteration, strip it / queue the change\n              // and return early\n              if ( hasTag ) {\n                items = stashArr;\n                scope.$evalAsync( function () {\n                  $select.activeIndex = 0;\n                  $select.items = items;\n                });\n              }\n              return;\n            }\n            if ( _findCaseInsensitiveDupe(stashArr) ) {\n              // if there is a tag from prev iteration, strip it\n              if ( hasTag ) {\n                $select.items = stashArr.slice(1,stashArr.length);\n              }\n              return;\n            }\n          }\n          if ( hasTag ) dupeIndex = _findApproxDupe($select.selected, newItem);\n          // dupe found, shave the first item\n          if ( dupeIndex > -1 ) {\n            items = items.slice(dupeIndex+1,items.length-1);\n          } else {\n            items = [];\n            if (newItem) items.push(newItem);\n            items = items.concat(stashArr);\n          }\n          scope.$evalAsync( function () {\n            $select.activeIndex = 0;\n            $select.items = items;\n\n            if ($select.isGrouped) {\n              // update item references in groups, so that indexOf will work after angular.copy\n              var itemsWithoutTag = newItem ? items.slice(1) : items;\n              $select.setItemsFn(itemsWithoutTag);\n              if (newItem) {\n                // add tag item as a new group\n                $select.items.unshift(newItem);\n                $select.groups.unshift({name: '', items: [newItem], tagging: true});\n              }\n            }\n          });\n        }\n      });\n      function _findCaseInsensitiveDupe(arr) {\n        if ( arr === undefined || $select.search === undefined ) {\n          return false;\n        }\n        var hasDupe = arr.filter( function (origItem) {\n          if ( $select.search.toUpperCase() === undefined || origItem === undefined ) {\n            return false;\n          }\n          return origItem.toUpperCase() === $select.search.toUpperCase();\n        }).length > 0;\n\n        return hasDupe;\n      }\n      function _findApproxDupe(haystack, needle) {\n        var dupeIndex = -1;\n        if(angular.isArray(haystack)) {\n          var tempArr = angular.copy(haystack);\n          for (var i = 0; i <tempArr.length; i++) {\n            // handle the simple string version of tagging\n            if ( $select.tagging.fct === undefined ) {\n              // search the array for the match\n              if ( tempArr[i]+' '+$select.taggingLabel === needle ) {\n              dupeIndex = i;\n              }\n            // handle the object tagging implementation\n            } else {\n              var mockObj = tempArr[i];\n              if (angular.isObject(mockObj)) {\n                mockObj.isTag = true;\n              }\n              if ( angular.equals(mockObj, needle) ) {\n                dupeIndex = i;\n              }\n            }\n          }\n        }\n        return dupeIndex;\n      }\n\n      $select.searchInput.on('blur', function() {\n        $timeout(function() {\n          $selectMultiple.activeMatchIndex = -1;\n        });\n      });\n\n    }\n  };\n}]);\n\nuis.directive('uiSelectNoChoice',\n    ['uiSelectConfig', function (uiSelectConfig) {\n        return {\n            restrict: 'EA',\n            require: '^uiSelect',\n            replace: true,\n            transclude: true,\n            templateUrl: function (tElement) {\n                // Needed so the uiSelect can detect the transcluded content\n                tElement.addClass('ui-select-no-choice');\n      \n                // Gets theme attribute from parent (ui-select)\n                var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n                return theme + '/no-choice.tpl.html';\n            }\n        };\n    }]);\n\nuis.directive('uiSelectSingle', ['$timeout','$compile', function($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = ctrls[1];\n\n      //From view --> model\n      ngModel.$parsers.unshift(function (inputValue) {\n        var locals = {},\n            result;\n\n        if (inputValue === undefined || inputValue === null) {\n          return inputValue;\n        }\n\n        locals[$select.parserResult.itemName] = inputValue;\n        result = $select.parserResult.modelMapper(scope, locals);\n        return result;\n      });\n\n      //From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (data){\n          var checkFnSingle = function(d){\n            locals[$select.parserResult.itemName] = d;\n            result = $select.parserResult.modelMapper(scope, locals);\n            return result === inputValue;\n          };\n          //If possible pass same object stored in $select.selected\n          if ($select.selected && checkFnSingle($select.selected)) {\n            return $select.selected;\n          }\n          for (var i = data.length - 1; i >= 0; i--) {\n            if (checkFnSingle(data[i])) return data[i];\n          }\n        }\n        return inputValue;\n      });\n\n      //Update viewValue if model change\n      scope.$watch('$select.selected', function(newValue) {\n        if (ngModel.$viewValue !== newValue) {\n          ngModel.$setViewValue(newValue);\n        }\n      });\n\n      ngModel.$render = function() {\n        $select.selected = ngModel.$viewValue;\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        $select.selected = item;\n      });\n\n      scope.$on('uis:close', function (event, skipFocusser) {\n        $timeout(function(){\n          $select.focusser.prop('disabled', false);\n          if (!skipFocusser) $select.focusser[0].focus();\n        },0,false);\n      });\n\n      scope.$on('uis:activate', function () {\n        // Not disable because we still wants to use focusser value in \"activate\"\n        // focusser.prop('disabled', true); //Will reactivate it on .close()\n      });\n\n      //Idea from: https://github.com/ivaynberg/select2/blob/79b5bf6db918d7560bdd959109b7bcfb47edaf43/select2.js#L1954\n      var focusser = angular.element(\"<input ng-disabled='$select.disabled' class='ui-select-focusser ui-select-offscreen' type='text' id='{{ $select.focusserId }}' aria-label='{{ $select.focusserTitle }}' aria-haspopup='true' role='button' />\");\n      $compile(focusser)(scope);\n      $select.focusser = focusser;\n\n      //Input that will handle focus\n      $select.focusInput = focusser;\n\n      // insert focusser outside select2-container to avoid appendToBody\n      element.parent().after(focusser);\n      focusser.bind(\"focus\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = true;\n        });\n      });\n      focusser.bind(\"blur\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = false;\n        });\n      });\n      focusser.bind(\"keydown\", function(e){\n\n        if (e.which === KEY.BACKSPACE) {\n          e.preventDefault();\n          e.stopPropagation();\n          $select.select(null);\n          scope.$apply();\n          return;\n        }\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\n          return;\n        }\n\n        if (e.which == KEY.DOWN  || e.which == KEY.UP || e.which == KEY.ENTER || e.which == KEY.SPACE){\n          e.preventDefault();\n          e.stopPropagation();\n          $select.activate();\n        }\n\n        scope.$digest();\n      });\n\n      focusser.bind(\"keyup input\", function(e){\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || e.which == KEY.ENTER || e.which === KEY.BACKSPACE) {\n          return;\n        }\n\n        $select.activate(focusser); //User pressed some regular key, so we pass it to the search input\n        scope.$digest();\n\n      });\n\n\n    }\n  };\n}]);\n\n// Make multiple matches sortable\nuis.directive('uiSelectSort', ['$timeout', 'uiSelectConfig', 'uiSelectMinErr', function($timeout, uiSelectConfig, uiSelectMinErr) {\n  return {\n    require: ['^^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n      if (scope[attrs.uiSelectSort] === null) {\n        throw uiSelectMinErr('sort', 'Expected a list to sort');\n      }\n\n      var $select = ctrls[0];\n      var $ngModel = ctrls[1];\n\n      var options = angular.extend({\n          axis: 'horizontal'\n        },\n        scope.$eval(attrs.uiSelectSortOptions));\n\n      var axis = options.axis;\n      var draggingClassName = 'dragging';\n      var droppingClassName = 'dropping';\n      var droppingBeforeClassName = 'dropping-before';\n      var droppingAfterClassName = 'dropping-after';\n\n      scope.$watch(function(){\n        return $select.sortable;\n      }, function(newValue){\n        if (newValue) {\n          element.attr('draggable', true);\n        } else {\n          element.removeAttr('draggable');\n        }\n      });\n\n      element.on('dragstart', function(event) {\n        element.addClass(draggingClassName);\n\n        (event.dataTransfer || event.originalEvent.dataTransfer).setData('text', scope.$index.toString());\n      });\n\n      element.on('dragend', function() {\n        removeClass(draggingClassName);\n      });\n\n      var move = function(from, to) {\n        /*jshint validthis: true */\n        this.splice(to, 0, this.splice(from, 1)[0]);\n      };\n\n      var removeClass = function(className) {\n        angular.forEach($select.$element.querySelectorAll('.' + className), function(el){\n          angular.element(el).removeClass(className);\n        });\n      };\n\n      var dragOverHandler = function(event) {\n        event.preventDefault();\n\n        var offset = axis === 'vertical' ? event.offsetY || event.layerY || (event.originalEvent ? event.originalEvent.offsetY : 0) : event.offsetX || event.layerX || (event.originalEvent ? event.originalEvent.offsetX : 0);\n\n        if (offset < (this[axis === 'vertical' ? 'offsetHeight' : 'offsetWidth'] / 2)) {\n          removeClass(droppingAfterClassName);\n          element.addClass(droppingBeforeClassName);\n\n        } else {\n          removeClass(droppingBeforeClassName);\n          element.addClass(droppingAfterClassName);\n        }\n      };\n\n      var dropTimeout;\n\n      var dropHandler = function(event) {\n        event.preventDefault();\n\n        var droppedItemIndex = parseInt((event.dataTransfer || event.originalEvent.dataTransfer).getData('text'), 10);\n\n        // prevent event firing multiple times in firefox\n        $timeout.cancel(dropTimeout);\n        dropTimeout = $timeout(function() {\n          _dropHandler(droppedItemIndex);\n        }, 20);\n      };\n\n      var _dropHandler = function(droppedItemIndex) {\n        var theList = scope.$eval(attrs.uiSelectSort);\n        var itemToMove = theList[droppedItemIndex];\n        var newIndex = null;\n\n        if (element.hasClass(droppingBeforeClassName)) {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index - 1;\n          } else {\n            newIndex = scope.$index;\n          }\n        } else {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index;\n          } else {\n            newIndex = scope.$index + 1;\n          }\n        }\n\n        move.apply(theList, [droppedItemIndex, newIndex]);\n\n        $ngModel.$setViewValue(Date.now());\n\n        scope.$apply(function() {\n          scope.$emit('uiSelectSort:change', {\n            array: theList,\n            item: itemToMove,\n            from: droppedItemIndex,\n            to: newIndex\n          });\n        });\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('drop', dropHandler);\n      };\n\n      element.on('dragenter', function() {\n        if (element.hasClass(draggingClassName)) {\n          return;\n        }\n\n        element.addClass(droppingClassName);\n\n        element.on('dragover', dragOverHandler);\n        element.on('drop', dropHandler);\n      });\n\n      element.on('dragleave', function(event) {\n        if (event.target != element) {\n          return;\n        }\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('dragover', dragOverHandler);\n        element.off('drop', dropHandler);\n      });\n    }\n  };\n}]);\n\n/**\n * Debounces functions\n *\n * Taken from UI Bootstrap $$debounce source code\n * See https://github.com/angular-ui/bootstrap/blob/master/src/debounce/debounce.js\n *\n */\nuis.factory('$$uisDebounce', ['$timeout', function($timeout) {\n  return function(callback, debounceTime) {\n    var timeoutPromise;\n\n    return function() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      if (timeoutPromise) {\n        $timeout.cancel(timeoutPromise);\n      }\n\n      timeoutPromise = $timeout(function() {\n        callback.apply(self, args);\n      }, debounceTime);\n    };\n  };\n}]);\n\nuis.directive('uisOpenClose', ['$parse', '$timeout', function ($parse, $timeout) {\n  return {\n    restrict: 'A',\n    require: 'uiSelect',\n    link: function (scope, element, attrs, $select) {\n      $select.onOpenCloseCallback = $parse(attrs.uisOpenClose);\n\n      scope.$watch('$select.open', function (isOpen, previousState) {\n        if (isOpen !== previousState) {\n          $timeout(function () {\n            $select.onOpenCloseCallback(scope, {\n              isOpen: isOpen\n            });\n          });\n        }\n      });\n    }\n  };\n}]);\n\n/**\n * Parses \"repeat\" attribute.\n *\n * Taken from AngularJS ngRepeat source code\n * See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L211\n *\n * Original discussion about parsing \"repeat\" attribute instead of fully relying on ng-repeat:\n * https://github.com/angular-ui/ui-select/commit/5dd63ad#commitcomment-5504697\n */\n\nuis.service('uisRepeatParser', ['uiSelectMinErr','$parse', function(uiSelectMinErr, $parse) {\n  var self = this;\n\n  /**\n   * Example:\n   * expression = \"address in addresses | filter: {street: $select.search} track by $index\"\n   * itemName = \"address\",\n   * source = \"addresses | filter: {street: $select.search}\",\n   * trackByExp = \"$index\",\n   */\n  self.parse = function(expression) {\n\n\n    var match;\n    //var isObjectCollection = /\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)/.test(expression);\n    // If an array is used as collection\n\n    // if (isObjectCollection){\n    // 000000000000000000000000000000111111111000000000000000222222222222220033333333333333333333330000444444444444444444000000000000000055555555555000000000000000000000066666666600000000\n    match = expression.match(/^\\s*(?:([\\s\\S]+?)\\s+as\\s+)?(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(\\s*[\\s\\S]+?)?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n    // 1 Alias\n    // 2 Item\n    // 3 Key on (key,value)\n    // 4 Value on (key,value)\n    // 5 Source expression (including filters)\n    // 6 Track by\n\n    if (!match) {\n      throw uiSelectMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n              expression);\n    }\n    \n    var source = match[5], \n        filters = '';\n\n    // When using (key,value) ui-select requires filters to be extracted, since the object\n    // is converted to an array for $select.items \n    // (in which case the filters need to be reapplied)\n    if (match[3]) {\n      // Remove any enclosing parenthesis\n      source = match[5].replace(/(^\\()|(\\)$)/g, '');\n      // match all after | but not after ||\n      var filterMatch = match[5].match(/^\\s*(?:[\\s\\S]+?)(?:[^\\|]|\\|\\|)+([\\s\\S]*)\\s*$/);\n      if(filterMatch && filterMatch[1].trim()) {\n        filters = filterMatch[1];\n        source = source.replace(filters, '');\n      }      \n    }\n\n    return {\n      itemName: match[4] || match[2], // (lhs) Left-hand side,\n      keyName: match[3], //for (key, value) syntax\n      source: $parse(source),\n      filters: filters,\n      trackByExp: match[6],\n      modelMapper: $parse(match[1] || match[4] || match[2]),\n      repeatExpression: function (grouped) {\n        var expression = this.itemName + ' in ' + (grouped ? '$group.items' : '$select.items');\n        if (this.trackByExp) {\n          expression += ' track by ' + this.trackByExp;\n        }\n        return expression;\n      } \n    };\n\n  };\n\n  self.getGroupNgRepeatExpression = function() {\n    return '$group in $select.groups track by $group.name';\n  };\n\n}]);\n\n}());\nangular.module(\"ui.select\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bootstrap/choices.tpl.html\",\"<ul class=\\\"ui-select-choices ui-select-choices-content ui-select-dropdown dropdown-menu\\\" ng-show=\\\"$select.open && $select.items.length > 0\\\"><li class=\\\"ui-select-choices-group\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\"><div class=\\\"divider\\\" ng-show=\\\"$select.isGrouped && $index > 0\\\"></div><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label dropdown-header\\\" ng-bind=\\\"$group.name\\\"></div><div ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\" role=\\\"option\\\"><span class=\\\"ui-select-choices-row-inner\\\"></span></div></li></ul>\");\n$templateCache.put(\"bootstrap/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><span ng-repeat=\\\"$item in $select.selected track by $index\\\"><span class=\\\"ui-select-match-item btn btn-default btn-xs\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'btn-primary\\':$selectMultiple.activeMatchIndex === $index, \\'select-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span class=\\\"close ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&nbsp;&times;</span> <span uis-transclude-append=\\\"\\\"></span></span></span></span>\");\n$templateCache.put(\"bootstrap/match.tpl.html\",\"<div class=\\\"ui-select-match\\\" ng-hide=\\\"$select.open && $select.searchEnabled\\\" ng-disabled=\\\"$select.disabled\\\" ng-class=\\\"{\\'btn-default-focus\\':$select.focus}\\\"><span tabindex=\\\"-1\\\" class=\\\"btn btn-default form-control ui-select-toggle\\\" aria-label=\\\"{{ $select.baseTitle }} activate\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" style=\\\"outline: 0;\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"ui-select-match-text pull-left\\\" ng-class=\\\"{\\'ui-select-allow-clear\\': $select.allowClear && !$select.isEmpty()}\\\" ng-transclude=\\\"\\\"></span> <i class=\\\"caret pull-right\\\" ng-click=\\\"$select.toggle($event)\\\"></i> <a ng-show=\\\"$select.allowClear && !$select.isEmpty() && ($select.disabled !== true)\\\" aria-label=\\\"{{ $select.baseTitle }} clear\\\" style=\\\"margin-right: 10px\\\" ng-click=\\\"$select.clear($event)\\\" class=\\\"btn btn-xs btn-link pull-right\\\"><i class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></i></a></span></div>\");\n$templateCache.put(\"bootstrap/no-choice.tpl.html\",\"<ul class=\\\"ui-select-no-choice dropdown-menu\\\" ng-show=\\\"$select.items.length == 0\\\"><li ng-transclude=\\\"\\\"></li></ul>\");\n$templateCache.put(\"bootstrap/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple ui-select-bootstrap dropdown form-control\\\" ng-class=\\\"{open: $select.open}\\\"><div><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" class=\\\"ui-select-search input-xs\\\" placeholder=\\\"{{$selectMultiple.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" ng-model=\\\"$select.search\\\" role=\\\"combobox\\\" aria-expanded=\\\"{{$select.open}}\\\" aria-label=\\\"{{$select.baseTitle}}\\\" ng-class=\\\"{\\'spinner\\': $select.refreshing}\\\" ondrop=\\\"return false;\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"bootstrap/select.tpl.html\",\"<div class=\\\"ui-select-container ui-select-bootstrap dropdown\\\" ng-class=\\\"{open: $select.open}\\\"><div class=\\\"ui-select-match\\\"></div><span ng-show=\\\"$select.open && $select.refreshing && $select.spinnerEnabled\\\" class=\\\"ui-select-refreshing {{$select.spinnerClass}}\\\"></span> <input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" aria-expanded=\\\"true\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" class=\\\"form-control ui-select-search\\\" ng-class=\\\"{ \\'ui-select-search-hidden\\' : !$select.searchEnabled }\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-show=\\\"$select.open\\\"><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"select2/choices.tpl.html\",\"<ul tabindex=\\\"-1\\\" class=\\\"ui-select-choices ui-select-choices-content select2-results\\\"><li class=\\\"ui-select-choices-group\\\" ng-class=\\\"{\\'select2-result-with-children\\': $select.choiceGrouped($group) }\\\"><div ng-show=\\\"$select.choiceGrouped($group)\\\" class=\\\"ui-select-choices-group-label select2-result-label\\\" ng-bind=\\\"$group.name\\\"></div><ul id=\\\"ui-select-choices-{{ $select.generatedId }}\\\" ng-class=\\\"{\\'select2-result-sub\\': $select.choiceGrouped($group), \\'select2-result-single\\': !$select.choiceGrouped($group) }\\\"><li role=\\\"option\\\" ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{\\'select2-highlighted\\': $select.isActive(this), \\'select2-disabled\\': $select.isDisabled(this)}\\\"><div class=\\\"select2-result-label ui-select-choices-row-inner\\\"></div></li></ul></li><li ng-if=\\\"$select.loadMoreAttr\\\"><div ng-show=\\\"!$select.hasMoreResults()\\\">&nbsp;</div><button ng-show=\\\"$select.hasMoreResults()\\\" ng-click=\\\"$select.loadMoreResults()\\\" type=\\\"button\\\" class=\\\"btn btn-xs td-100per\\\"><i class=\\\"fa fa-sort-down\\\"></i></button></li><li ng-if=\\\"$select.footerTemplateUrl\\\"><ng-include src=\\\"$select.footerTemplateUrl\\\"></ng-include></li></ul>\");\n$templateCache.put(\"select2/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><li class=\\\"ui-select-match-item select2-search-choice\\\" ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-class=\\\"{\\'select2-search-choice-focus\\':$selectMultiple.activeMatchIndex === $index, \\'select2-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span uis-transclude-append=\\\"\\\"></span> <a href=\\\"javascript:;\\\" class=\\\"ui-select-match-close select2-search-choice-close\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\" tabindex=\\\"-1\\\"></a></li></span>\");\n$templateCache.put(\"select2/match.tpl.html\",\"<a class=\\\"select2-choice ui-select-match\\\" ng-class=\\\"{\\'select2-default\\': $select.isEmpty()}\\\" ng-click=\\\"$select.toggle($event)\\\" aria-label=\\\"{{ $select.baseTitle }} select\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\" ng-transclude=\\\"\\\"></span> <abbr ng-if=\\\"$select.matchLink && !$select.isEmpty()\\\" class=\\\"ui-select-match-link icon icon-share-alt\\\" ng-click=\\\"$select.openMatchLink($event)\\\"></abbr> <abbr ng-if=\\\"$select.allowClear && !$select.isEmpty()\\\" class=\\\"select2-search-choice-close\\\" ng-click=\\\"$select.clear($event)\\\"></abbr> <span class=\\\"select2-arrow ui-select-toggle\\\"><b></b></span></a>\");\n$templateCache.put(\"select2/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"><div class=\\\"dropdown-content\\\"><div data-selectable=\\\"\\\" ng-transclude=\\\"\\\"></div></div></div>\");\n$templateCache.put(\"select2/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple select2 select2-container select2-container-multi\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled}\\\"><ul class=\\\"select2-choices\\\"><span class=\\\"ui-select-match\\\"></span><li class=\\\"select2-search-field\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"select2-input ui-select-search\\\" placeholder=\\\"{{$selectMultiple.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-model=\\\"$select.search\\\" ng-click=\\\"$select.activate()\\\" style=\\\"width: 34px;\\\" ondrop=\\\"return false;\\\"></li></ul><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open || $select.items.length === 0}\\\"><div class=\\\"ui-select-choices\\\"></div></div></div>\");\n$templateCache.put(\"select2/select.tpl.html\",\"<div class=\\\"ui-select-container select2 select2-container\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled, \\'select2-container-active\\': $select.focus, \\'select2-allowclear\\': $select.allowClear && !$select.isEmpty()}\\\"><div class=\\\"ui-select-match\\\"></div><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open}\\\"><div class=\\\"search-container\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled, \\'select2-search\\':$select.searchEnabled}\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" ng-class=\\\"{\\'select2-active\\': $select.refreshing}\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" class=\\\"ui-select-search select2-input\\\" ng-model=\\\"$select.search\\\"><div class=\\\"select2-search__btn-group\\\" ng-if=\\\"$select.functionalButtonGroup\\\"><button ng-repeat=\\\"btn in $select.functionalButtonGroup track by $index\\\" type=\\\"button\\\" class=\\\"{{ btn.attrClass }}\\\" uib-tooltip=\\\"{{ btn.tooltip }}\\\" ng-click=\\\"btn.onClick()\\\"><span ng-bind-html=\\\"btn.content\\\"></span></button></div></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div></div>\");\n$templateCache.put(\"selectize/choices.tpl.html\",\"<div ng-show=\\\"$select.open\\\" class=\\\"ui-select-choices ui-select-dropdown selectize-dropdown\\\" ng-class=\\\"{\\'single\\': !$select.multiple, \\'multi\\': $select.multiple}\\\"><div class=\\\"ui-select-choices-content selectize-dropdown-content\\\"><div class=\\\"ui-select-choices-group optgroup\\\"><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label optgroup-header\\\" ng-bind=\\\"$group.name\\\"></div><div role=\\\"option\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\"><div class=\\\"option ui-select-choices-row-inner\\\" data-selectable=\\\"\\\"></div></div></div></div></div>\");\n$templateCache.put(\"selectize/match-multiple.tpl.html\",\"<div class=\\\"ui-select-match\\\" data-value=\\\"\\\" ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'active\\':$selectMultiple.activeMatchIndex === $index}\\\" ui-select-sort=\\\"$select.selected\\\"><span class=\\\"ui-select-match-item\\\" ng-class=\\\"{\\'select-locked\\':$select.isLocked(this, $index)}\\\"><span uis-transclude-append=\\\"\\\"></span> <span class=\\\"remove ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&times;</span></span></div>\");\n$templateCache.put(\"selectize/match.tpl.html\",\"<div ng-hide=\\\"$select.searchEnabled && ($select.open || $select.isEmpty())\\\" class=\\\"ui-select-match\\\"><span ng-show=\\\"!$select.searchEnabled && ($select.isEmpty() || $select.open)\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty() || $select.open\\\" ng-transclude=\\\"\\\"></span></div>\");\n$templateCache.put(\"selectize/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice selectize-dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"><div class=\\\"selectize-dropdown-content\\\"><div data-selectable=\\\"\\\" ng-transclude=\\\"\\\"></div></div></div>\");\n$templateCache.put(\"selectize/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container selectize-control multi plugin-remove_button\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"><div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" placeholder=\\\"{{$selectMultiple.getPlaceholder()}}\\\" ng-model=\\\"$select.search\\\" ng-disabled=\\\"$select.disabled\\\" aria-expanded=\\\"{{$select.open}}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" ondrop=\\\"return false;\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"selectize/select.tpl.html\",\"<div class=\\\"ui-select-container selectize-control single\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"><div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search ui-select-toggle\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" ng-click=\\\"$select.toggle($event)\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-hide=\\\"!$select.isEmpty() && !$select.open\\\" ng-disabled=\\\"$select.disabled\\\" aria-label=\\\"{{ $select.baseTitle }}\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");}]);",null,null]}